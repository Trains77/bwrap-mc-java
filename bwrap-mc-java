#!/bin/bash

VPN_INTERFACE=wg0-mullvad
WAN_INTERFACE=wlan0

unset X11_FLAGS
unset ENABLE_NETWORKING
unset BWRAP_PID
unset SANDBOX_PID
unset SLIRP4NET_PID
unset SOMMELIER_PID
unset SLIRP_ADDITIONAL_ARGS
USERID="$(id -u)"

if test -f ~/.sandboxing/seccomp_default_filter.bpf; then
export SECCOMP_FILTER_ARGS="--seccomp 10"
else
echo no seccomp filter found, creating empty file to prevent script from erroring out
if ! test -d ~/.sandboxing; then
mkdir ~/.sandboxing
fi
touch ~/.sandboxing/seccomp_default_filter.bpf
echo
fi

# -Dorg.lwjgl.glfw.libname=$HOME/Minecraft/lib/libglfw.so.3.4 

if [ "$ENABLE_X11" = true ]; then
export X11_FLAGS="--bind /tmp/.X11-unix/X58 /tmp/.X11-unix/X58  --ro-bind /usr/bin/xrandr /usr/bin/xrandr --setenv DISPLAY :58"
sommelier --noop-driver -X --x-display=58 --direct-scale --display=wayland-0 --glamor --force-drm-device=/dev/dri/renderD128 --xwayland-gl-driver-path=/usr/lib --peer-cmd-prefix=/lib64/ld-linux-x86-64.so.2 --no-exit-with-child --fullscreen-mode=immersive true &
export SOMMELIER_PID=$(echo $!)
sleep .3
fi

if [ "$AUDIO_BACKEND" = "pipewire" ]; then
AUDIO_FLAGS="--ro-bind /run/user/$USERID/pipewire-0 /run/user/3581/pipewire-0 --ro-bind /usr/share/pipewire /usr/share/pipewire"
elif [ "$AUDIO_BACKEND" = "pulseaudio" ]; then
AUDIO_FLAGS="--ro-bind /run/user/$USERID/pulse /run/user/3581/pulse"
fi

if [ "$DISABLE_NETWORKING" = true ]; then
export ENABLE_NETWORKING="--unshare-net"
else
export ENABLE_NETWORKING="--share-net"
fi

if ! [ "$DISABLE_LOOPBACK" = false ]; then
export SLIRP_ADDITIONAL_ARGS="--disable-host-loopback $SLIRP_ADDITIONAL_ARGS"
else
echo Host Loopback IP is 10.0.2.2
fi

if [ "$VPN_CONNECT_ONLY" = "true" ]; then
export SLIRP_ADDITIONAL_ARGS="--outbound-addr=$VPN_INTERFACE $SLIRP_ADDITIONAL_ARGS"
elif [ "$VPN_CONNECT_ONLY" = "force-disabled" ]; then
export SLIRP_ADDITIONAL_ARGS="--outbound-addr=$WAN_INTERFACE $SLIRP_ADDITIONAL_ARGS"
fi

if [ "$BIND_HOME_MINECRAFT_FOLDER_ITEMS" = "true" ]; then
export MINECRAFT_SHARE_ARGS="--bind-try $HOME/.minecraft/screenshots $HOME/.minecraft/screenshots --bind-try $HOME/.minecraft/saves $HOME/.minecraft/saves --bind-try $HOME/.minecraft/shaderpacks $HOME/.minecraft/shaderpacks --bind-try $HOME/.minecraft/optionsof.txt $HOME/.minecraft/optionsof.txt --ro-bind-try $HOME/.minecraft/resourcepacks $HOME/.minecraft/resourcepacks"
fi

if ! [ -z ${BIND_ADDITIONAL_FOLDERS+x} ]; then
for i in $BIND_ADDITIONAL_FOLDERS; do
# I actually don't know how the script drops folders with spaces, but it does seem to, sooo
if [[ "$i" = *" "* ]]; then
echo "Unfortunately, the script cannot handle spaces at the moment, not binding $i"
else
export BIND_ADDITIONAL_FOLDER_ARGS="--bind-try $i $i $BIND_ADDITIONAL_FOLDER_ARGS"
fi
done
fi

if ! [ -z ${BIND_ADDITIONAL_FOLDERS_RO+x} ]; then
for i in $BIND_ADDITIONAL_FOLDERS; do
# I actually don't know how the script drops folders with spaces, but it does seem to, sooo
if [[ "$i" = *" "* ]]; then
echo "Unfortunately, the script cannot handle spaces at the moment, not binding $i"
else
export BIND_ADDITIONAL_FOLDER_RO_ARGS="--ro-bind-try $i $i $BIND_ADDITIONAL_FOLDER_ARGS"
fi
done
fi

bwrap --dev-bind / / --unshare-net --die-with-parent bwrap \
--perms 0555 \
--tmpfs / \
--die-with-parent \
--tmpfs /tmp \
--ro-bind "$INST_DIR" "$INST_DIR" \
--bind "$INST_MC_DIR" "$INST_MC_DIR" \
--ro-bind-try "$INST_MC_DIR/coremods" "$INST_MC_DIR/coremods" \
--ro-bind-try "$INST_MC_DIR/mods" "$INST_MC_DIR/mods" \
--tmpfs "$INST_MC_DIR/.cache" \
--clearenv \
$X11_FLAGS \
--ro-bind $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/assets $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/assets \
--ro-bind $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/assets/indexes $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/assets/indexes \
--ro-bind $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/libraries $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/libraries \
--ro-bind $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/icons $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/icons \
--ro-bind $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/meta $HOME/.var/app/org.prismlauncher.PrismLauncher/data/PrismLauncher/meta \
$BIND_ADDITIONAL_FOLDER_ARGS \
$BIND_ADDITIONAL_FOLDER_RO_ARGS \
$MINECRAFT_SHARE_ARGS \
--tmpfs $HOME/.cache \
--perms 700 \
--tmpfs /run/user/3581 \
$AUDIO_FLAGS \
--tmpfs /run/user/3581/dconf \
--symlink usr/lib /lib \
--symlink usr/lib64 /lib64 \
--symlink usr/bin /bin \
--symlink usr/bin /sbin \
--symlink lib /usr/lib64 \
--ro-bind /usr/lib /usr/lib \
--ro-bind /usr/lib/jvm /usr/lib/jvm \
--ro-bind /usr/share/PrismLauncher /usr/share/PrismLauncher \
--ro-bind /usr/share/X11/locale /usr/share/X11/locale \
--ro-bind /usr/share/glvnd /usr/share/glvnd \
--ro-bind /usr/share/X11/xkb /usr/share/X11/xkb \
--ro-bind /etc/fonts /etc/fonts \
--ro-bind /etc/timezone /etc/timezone \
--ro-bind /etc/resolv.conf /etc/resolv.conf \
--ro-bind /etc/alsa /etc/alsa \
--ro-bind /etc/hosts /etc/hosts \
--ro-bind /usr/share/ca-certificates /usr/share/ca-certificates \
--ro-bind /etc/ssl /etc/ssl \
--ro-bind /etc/ca-certificates /etc/ca-certificates \
--ro-bind /etc/java21-openjdk /etc/java21-openjdk \
--ro-bind /etc/java-8-openjdk /etc/java-8-openjdk \
--ro-bind /etc/java17-openjdk /etc/java17-openjdk \
--unshare-all \
--unshare-user \
--disable-userns \
--dev /dev \
--dev-bind /dev/dri /dev/dri \
--ro-bind /sys/dev/char /sys/dev/char \
--ro-bind /sys/devices/pci0000:00 /sys/devices/pci0000:00 \
--proc /proc \
--hostname orange \
--ro-bind /run/user/$USERID/wayland-0 /run/user/3581/wayland-0 \
--perms 0750 \
--dir /run/user/3581/dconf \
--as-pid-1 \
--cap-drop all \
--remount-ro / \
--setenv XDG_SESSION_TYPE wayland \
--setenv PATH /usr/bin \
--setenv WAYLAND_DISPLAY "$WAYLAND_DISPLAY" \
--setenv HOME $HOME \
--setenv USER $(whoami) \
--setenv XDG_RUNTIME_DIR /run/user/3581 \
--uid 3581 \
--gid 3581 \
--new-session \
$SECCOMP_FILTER_ARGS \
10< ~/.sandboxing/seccomp_default_filter.bpf \
$ENABLE_NETWORKING $* &
# bash $HOME/Scripts/container-setup

export BWRAP_PID=$(echo $!)
sleep .2
export SANDBOX_PID="$(pgrep -P $!)"
echo Sandbox Process PID: $SANDBOX_PID

# get slirp4netns running for networking
slirp4netns --configure $SLIRP_ADDITIONAL_ARGS --disable-dns $SANDBOX_PID eth0 &
export SLIRP4NET_PID=$(echo $!)

wait $BWRAP_PID

# Minecraft should have stopped, cleaning up any remaining processes
kill -SIGHUP $SLIRP4NET_PID
if [ "$ENABLE_X11" = true ]; then
kill -SIGTERM $SOMMELIER_PID
fi
